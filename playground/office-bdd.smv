MODULE main

VAR
  visitor: boolean;
  employee: boolean;
  res: {start, out, lob, cor, bur, mr};
  out_lob_ll: {vis, not_vis, empl, not_empl, true};
  out_lob_lr: {vis, not_vis, empl, not_empl, true};
  out_lob_rl: {vis, not_vis, empl, not_empl, true};
  out_lob_rr: {vis, not_vis, empl, not_empl, true};
  out_cor_ll: {vis, not_vis, empl, not_empl, true};
  out_cor_lr: {vis, not_vis, empl, not_empl, true};
  out_cor_rl: {vis, not_vis, empl, not_empl, true};
  out_cor_rr: {vis, not_vis, empl, not_empl, true};
  lob_out_ll: {vis, not_vis, empl, not_empl, true};
  lob_out_lr: {vis, not_vis, empl, not_empl, true};
  lob_out_rl: {vis, not_vis, empl, not_empl, true};
  lob_out_rr: {vis, not_vis, empl, not_empl, true};
  lob_cor_ll: {vis, not_vis, empl, not_empl, true};
  lob_cor_lr: {vis, not_vis, empl, not_empl, true};
  lob_cor_rl: {vis, not_vis, empl, not_empl, true};
  lob_cor_rr: {vis, not_vis, empl, not_empl, true};
  cor_out_ll: {vis, not_vis, empl, not_empl, true};
  cor_out_lr: {vis, not_vis, empl, not_empl, true};
  cor_out_rl: {vis, not_vis, empl, not_empl, true};
  cor_out_rr: {vis, not_vis, empl, not_empl, true};
  cor_lob_ll: {vis, not_vis, empl, not_empl, true};
  cor_lob_lr: {vis, not_vis, empl, not_empl, true};
  cor_lob_rl: {vis, not_vis, empl, not_empl, true};
  cor_lob_rr: {vis, not_vis, empl, not_empl, true};
  cor_mr_ll: {vis, not_vis, empl, not_empl, true};
  cor_mr_lr: {vis, not_vis, empl, not_empl, true};
  cor_mr_rl: {vis, not_vis, empl, not_empl, true};
  cor_mr_rr: {vis, not_vis, empl, not_empl, true};
  cor_bur_ll: {vis, not_vis, empl, not_empl, true};
  cor_bur_lr: {vis, not_vis, empl, not_empl, true};
  cor_bur_rl: {vis, not_vis, empl, not_empl, true};
  cor_bur_rr: {vis, not_vis, empl, not_empl, true};
  mr_cor_ll: {vis, not_vis, empl, not_empl, true};
  mr_cor_lr: {vis, not_vis, empl, not_empl, true};
  mr_cor_rl: {vis, not_vis, empl, not_empl, true};
  mr_cor_rr: {vis, not_vis, empl, not_empl, true};
  bur_cor_ll: {vis, not_vis, empl, not_empl, true};
  bur_cor_lr: {vis, not_vis, empl, not_empl, true};
  bur_cor_rl: {vis, not_vis, empl, not_empl, true};
  bur_cor_rr: {vis, not_vis, empl, not_empl, true};

DEFINE

authz_out_lob_ll :=
    case
      out_lob_ll = vis:
        visitor;
      out_lob_ll = not_vis:
        !visitor;
      out_lob_ll = empl:
        employee;
      out_lob_ll = not_empl:
        !employee;
      out_lob_ll = true:
        TRUE;
    esac;
authz_out_lob_lr :=
    case
      out_lob_lr = vis: 
        visitor;
      out_lob_lr = not_vis:
        !visitor;
      out_lob_lr = empl:
        employee;
      out_lob_lr = not_empl:
        !employee;
      out_lob_lr = true:
        TRUE;
    esac;
authz_out_lob_rl :=
    case
      out_lob_rl = vis:
        visitor;
      out_lob_rl = not_vis:
        !visitor;
      out_lob_rl = empl:
        employee;
      out_lob_rl = not_empl:
        !employee;
      out_lob_rl = true:
        TRUE;
    esac;
authz_out_lob_rr :=
    case
      out_lob_rr = vis: 
        visitor;
      out_lob_rr = not_vis:
        !visitor;
      out_lob_rr = empl:
        employee;
      out_lob_rr = not_empl:
        !employee;
      out_lob_rr = true:
        TRUE;
    esac;
authz_out_cor_ll :=
    case
      out_cor_ll = vis:
        visitor;
      out_cor_ll = not_vis:
        !visitor;
      out_cor_ll = empl:
        employee;
      out_cor_ll = not_empl:
        !employee;
      out_cor_ll = true:
        TRUE;
    esac;
authz_out_cor_lr :=
    case
      out_cor_lr = vis: 
        visitor;
      out_cor_lr = not_vis:
        !visitor;
      out_cor_lr = empl:
        employee;
      out_cor_lr = not_empl:
        !employee;
      out_cor_lr = true:
        TRUE;
    esac;
authz_out_cor_rl :=
    case
      out_cor_rl = vis:
        visitor;
      out_cor_rl = not_vis:
        !visitor;
      out_cor_rl = empl:
        employee;
      out_cor_rl = not_empl:
        !employee;
      out_cor_rl = true:
        TRUE;
    esac;
authz_out_cor_rr :=
    case
      out_cor_rr = vis: 
        visitor;
      out_cor_rr = not_vis:
        !visitor;
      out_cor_rr = empl:
        employee;
      out_cor_rr = not_empl:
        !employee;
      out_cor_rr = true:
        TRUE;
    esac;
authz_lob_out_ll :=
    case
      lob_out_ll = vis:
        visitor;
      lob_out_ll = not_vis:
        !visitor;
      lob_out_ll = empl:
        employee;
      lob_out_ll = not_empl:
        !employee;
      lob_out_ll = true:
        TRUE;
    esac;
authz_lob_out_lr :=
    case
      lob_out_lr = vis: 
        visitor;
      lob_out_lr = not_vis:
        !visitor;
      lob_out_lr = empl:
        employee;
      lob_out_lr = not_empl:
        !employee;
      lob_out_lr = true:
        TRUE;
    esac;
authz_lob_out_rl :=
    case
      lob_out_rl = vis:
        visitor;
      lob_out_rl = not_vis:
        !visitor;
      lob_out_rl = empl:
        employee;
      lob_out_rl = not_empl:
        !employee;
      lob_out_rl = true:
        TRUE;
    esac;
authz_lob_out_rr :=
    case
      lob_out_rr = vis: 
        visitor;
      lob_out_rr = not_vis:
        !visitor;
      lob_out_rr = empl:
        employee;
      lob_out_rr = not_empl:
        !employee;
      lob_out_rr = true:
        TRUE;
    esac;
authz_lob_cor_ll :=
    case
      lob_cor_ll = vis:
        visitor;
      lob_cor_ll = not_vis:
        !visitor;
      lob_cor_ll = empl:
        employee;
      lob_cor_ll = not_empl:
        !employee;
      lob_cor_ll = true:
        TRUE;
    esac;
authz_lob_cor_lr :=
    case
      lob_cor_lr = vis: 
        visitor;
      lob_cor_lr = not_vis:
        !visitor;
      lob_cor_lr = empl:
        employee;
      lob_cor_lr = not_empl:
        !employee;
      lob_cor_lr = true:
        TRUE;
    esac;
authz_lob_cor_rl :=
    case
      lob_cor_rl = vis:
        visitor;
      lob_cor_rl = not_vis:
        !visitor;
      lob_cor_rl = empl:
        employee;
      lob_cor_rl = not_empl:
        !employee;
      lob_cor_rl = true:
        TRUE;
    esac;
authz_lob_cor_rr :=
    case
      lob_cor_rr = vis: 
        visitor;
      lob_cor_rr = not_vis:
        !visitor;
      lob_cor_rr = empl:
        employee;
      lob_cor_rr = not_empl:
        !employee;
      lob_cor_rr = true:
        TRUE;
    esac;
authz_cor_out_ll :=
    case
      cor_out_ll = vis:
        visitor;
      cor_out_ll = not_vis:
        !visitor;
      cor_out_ll = empl:
        employee;
      cor_out_ll = not_empl:
        !employee;
      cor_out_ll = true:
        TRUE;
    esac;
authz_cor_out_lr :=
    case
      cor_out_lr = vis: 
        visitor;
      cor_out_lr = not_vis:
        !visitor;
      cor_out_lr = empl:
        employee;
      cor_out_lr = not_empl:
        !employee;
      cor_out_lr = true:
        TRUE;
    esac;
authz_cor_out_rl :=
    case
      cor_out_rl = vis:
        visitor;
      cor_out_rl = not_vis:
        !visitor;
      cor_out_rl = empl:
        employee;
      cor_out_rl = not_empl:
        !employee;
      cor_out_rl = true:
        TRUE;
    esac;
authz_cor_out_rr :=
    case
      cor_out_rr = vis: 
        visitor;
      cor_out_rr = not_vis:
        !visitor;
      cor_out_rr = empl:
        employee;
      cor_out_rr = not_empl:
        !employee;
      cor_out_rr = true:
        TRUE;
    esac;
authz_cor_lob_ll :=
    case
      cor_lob_ll = vis:
        visitor;
      cor_lob_ll = not_vis:
        !visitor;
      cor_lob_ll = empl:
        employee;
      cor_lob_ll = not_empl:
        !employee;
      cor_lob_ll = true:
        TRUE;
    esac;
authz_cor_lob_lr :=
    case
      cor_lob_lr = vis: 
        visitor;
      cor_lob_lr = not_vis:
        !visitor;
      cor_lob_lr = empl:
        employee;
      cor_lob_lr = not_empl:
        !employee;
      cor_lob_lr = true:
        TRUE;
    esac;
authz_cor_lob_rl :=
    case
      cor_lob_rl = vis:
        visitor;
      cor_lob_rl = not_vis:
        !visitor;
      cor_lob_rl = empl:
        employee;
      cor_lob_rl = not_empl:
        !employee;
      cor_lob_rl = true:
        TRUE;
    esac;
authz_cor_lob_rr :=
    case
      cor_lob_rr = vis: 
        visitor;
      cor_lob_rr = not_vis:
        !visitor;
      cor_lob_rr = empl:
        employee;
      cor_lob_rr = not_empl:
        !employee;
      cor_lob_rr = true:
        TRUE;
    esac;
authz_cor_mr_ll :=
    case
      cor_mr_ll = vis:
        visitor;
      cor_mr_ll = not_vis:
        !visitor;
      cor_mr_ll = empl:
        employee;
      cor_mr_ll = not_empl:
        !employee;
      cor_mr_ll = true:
        TRUE;
    esac;
authz_cor_mr_lr :=
    case
      cor_mr_lr = vis: 
        visitor;
      cor_mr_lr = not_vis:
        !visitor;
      cor_mr_lr = empl:
        employee;
      cor_mr_lr = not_empl:
        !employee;
      cor_mr_lr = true:
        TRUE;
    esac;
authz_cor_mr_rl :=
    case
      cor_mr_rl = vis:
        visitor;
      cor_mr_rl = not_vis:
        !visitor;
      cor_mr_rl = empl:
        employee;
      cor_mr_rl = not_empl:
        !employee;
      cor_mr_rl = true:
        TRUE;
    esac;
authz_cor_mr_rr :=
    case
      cor_mr_rr = vis: 
        visitor;
      cor_mr_rr = not_vis:
        !visitor;
      cor_mr_rr = empl:
        employee;
      cor_mr_rr = not_empl:
        !employee;
      cor_mr_rr = true:
        TRUE;
    esac;
authz_cor_bur_ll :=
    case
      cor_bur_ll = vis:
        visitor;
      cor_bur_ll = not_vis:
        !visitor;
      cor_bur_ll = empl:
        employee;
      cor_bur_ll = not_empl:
        !employee;
      cor_bur_ll = true:
        TRUE;
    esac;
authz_cor_bur_lr :=
    case
      cor_bur_lr = vis: 
        visitor;
      cor_bur_lr = not_vis:
        !visitor;
      cor_bur_lr = empl:
        employee;
      cor_bur_lr = not_empl:
        !employee;
      cor_bur_lr = true:
        TRUE;
    esac;
authz_cor_bur_rl :=
    case
      cor_bur_rl = vis:
        visitor;
      cor_bur_rl = not_vis:
        !visitor;
      cor_bur_rl = empl:
        employee;
      cor_bur_rl = not_empl:
        !employee;
      cor_bur_rl = true:
        TRUE;
    esac;
authz_cor_bur_rr :=
    case
      cor_bur_rr = vis: 
        visitor;
      cor_bur_rr = not_vis:
        !visitor;
      cor_bur_rr = empl:
        employee;
      cor_bur_rr = not_empl:
        !employee;
      cor_bur_rr = true:
        TRUE;
    esac;
authz_mr_cor_ll :=
    case
      mr_cor_ll = vis:
        visitor;
      mr_cor_ll = not_vis:
        !visitor;
      mr_cor_ll = empl:
        employee;
      mr_cor_ll = not_empl:
        !employee;
      mr_cor_ll = true:
        TRUE;
    esac;
authz_mr_cor_lr :=
    case
      mr_cor_lr = vis: 
        visitor;
      mr_cor_lr = not_vis:
        !visitor;
      mr_cor_lr = empl:
        employee;
      mr_cor_lr = not_empl:
        !employee;
      mr_cor_lr = true:
        TRUE;
    esac;
authz_mr_cor_rl :=
    case
      mr_cor_rl = vis:
        visitor;
      mr_cor_rl = not_vis:
        !visitor;
      mr_cor_rl = empl:
        employee;
      mr_cor_rl = not_empl:
        !employee;
      mr_cor_rl = true:
        TRUE;
    esac;
authz_mr_cor_rr :=
    case
      mr_cor_rr = vis: 
        visitor;
      mr_cor_rr = not_vis:
        !visitor;
      mr_cor_rr = empl:
        employee;
      mr_cor_rr = not_empl:
        !employee;
      mr_cor_rr = true:
        TRUE;
    esac;
authz_bur_cor_ll :=
    case
      bur_cor_ll = vis:
        visitor;
      bur_cor_ll = not_vis:
        !visitor;
      bur_cor_ll = empl:
        employee;
      bur_cor_ll = not_empl:
        !employee;
      bur_cor_ll = true:
        TRUE;
    esac;
authz_bur_cor_lr :=
    case
      bur_cor_lr = vis: 
        visitor;
      bur_cor_lr = not_vis:
        !visitor;
      bur_cor_lr = empl:
        employee;
      bur_cor_lr = not_empl:
        !employee;
      bur_cor_lr = true:
        TRUE;
    esac;
authz_bur_cor_rl :=
    case
      bur_cor_rl = vis:
        visitor;
      bur_cor_rl = not_vis:
        !visitor;
      bur_cor_rl = empl:
        employee;
      bur_cor_rl = not_empl:
        !employee;
      bur_cor_rl = true:
        TRUE;
    esac;
authz_bur_cor_rr :=
    case
      bur_cor_rr = vis: 
        visitor;
      bur_cor_rr = not_vis:
        !visitor;
      bur_cor_rr = empl:
        employee;
      bur_cor_rr = not_empl:
        !employee;
      bur_cor_rr = true:
        TRUE;
    esac;



authz_out_lob := (authz_out_lob_ll | authz_out_lob_lr) & (authz_out_lob_rl | authz_out_lob_rr);
authz_out_cor := (authz_out_cor_ll | authz_out_cor_lr) & (authz_out_cor_rl | authz_out_cor_rr);
authz_lob_out := (authz_lob_out_ll | authz_lob_out_lr) & (authz_lob_out_rl | authz_lob_out_rr);
authz_lob_cor := (authz_lob_cor_ll | authz_lob_cor_lr) & (authz_lob_cor_rl | authz_lob_cor_rr);
authz_cor_out := (authz_cor_out_ll | authz_cor_out_lr) & (authz_cor_out_rl | authz_cor_out_rr);
authz_cor_lob := (authz_cor_lob_ll | authz_cor_lob_lr) & (authz_cor_lob_rl | authz_cor_lob_rr);
authz_cor_mr := (authz_cor_mr_ll | authz_cor_mr_lr) & (authz_cor_mr_rl | authz_cor_mr_rr);
authz_cor_bur := (authz_cor_bur_ll | authz_cor_bur_lr) & (authz_cor_bur_rl | authz_cor_bur_rr);
authz_mr_cor := (authz_mr_cor_ll | authz_mr_cor_lr) & (authz_mr_cor_rl | authz_mr_cor_rr);
authz_bur_cor := (authz_bur_cor_ll | authz_bur_cor_lr) & (authz_bur_cor_rl | authz_bur_cor_rr);

ASSIGN
  init(res) := start;
  init(employee) := {TRUE, FALSE};
  init(visitor) := {TRUE, FALSE};

  next(employee) := 
      case (res = start): {TRUE, FALSE};
      (res != start): employee;
      esac;
  next(visitor) := 
      case (res = start): {TRUE, FALSE};
      (res != start): visitor;
      esac;
  next(res) :=
    case
      (res = start): {out, lob, cor, mr, bur};
      (res = out) & authz_out_lob & authz_out_cor: {out, lob, cor};
      (res = out) & authz_out_lob & !authz_out_cor: {out, lob};
      (res = out) & !authz_out_lob & authz_out_cor: {out, cor};
      (res = out) & !authz_out_lob & !authz_out_cor: out;
      (res = lob) & authz_lob_out & authz_lob_cor: {out, lob, cor};
      (res = lob) & authz_lob_out & !authz_lob_cor: {out, lob};
      (res = lob) & !authz_lob_out & authz_lob_cor: {lob, cor};
      (res = lob) & !authz_lob_out & !authz_lob_cor: {lob};
      (res = cor) & !authz_cor_out & !authz_cor_lob & !authz_cor_bur & !authz_cor_mr: cor;
      (res = cor) & !authz_cor_out & !authz_cor_lob & !authz_cor_bur & authz_cor_mr: {cor, mr};
      (res = cor) & !authz_cor_out & !authz_cor_lob & authz_cor_bur & !authz_cor_mr: {cor, bur};
      (res = cor) & !authz_cor_out & !authz_cor_lob & authz_cor_bur & authz_cor_mr: {cor, mr, bur};
      (res = cor) & !authz_cor_out & authz_cor_lob & !authz_cor_bur & !authz_cor_mr: {cor, lob};
      (res = cor) & !authz_cor_out & authz_cor_lob & !authz_cor_bur & authz_cor_mr: {cor, lob, mr};
      (res = cor) & !authz_cor_out & authz_cor_lob & authz_cor_bur & !authz_cor_mr: {cor, lob, bur};
      (res = cor) & !authz_cor_out & authz_cor_lob & authz_cor_bur & authz_cor_mr: {cor, lob, mr, bur};
      (res = cor) & authz_cor_out & !authz_cor_lob & !authz_cor_bur & !authz_cor_mr: {cor, out};
      (res = cor) & authz_cor_out & !authz_cor_lob & !authz_cor_bur & authz_cor_mr: {cor, out, mr};
      (res = cor) & authz_cor_out & !authz_cor_lob & authz_cor_bur & !authz_cor_mr: {cor, out, bur};
      (res = cor) & authz_cor_out & !authz_cor_lob & authz_cor_bur & authz_cor_mr: {cor, out, mr, bur};
      (res = cor) & authz_cor_out & authz_cor_lob & !authz_cor_bur & !authz_cor_mr: {cor, lob, out};
      (res = cor) & authz_cor_out & authz_cor_lob & !authz_cor_bur & authz_cor_mr: {cor, lob, out, mr};
      (res = cor) & authz_cor_out & authz_cor_lob & authz_cor_bur & !authz_cor_mr: {cor, lob, out, bur};
      (res = cor) & authz_cor_out & authz_cor_lob & authz_cor_bur & authz_cor_mr: {cor, lob, out, mr, bur};
      (res = mr) & authz_mr_cor: {mr, cor};
      (res = mr) & !authz_mr_cor: mr;
      (res = bur) & authz_mr_cor: {bur, cor};
      (res = bur) & !authz_mr_cor: bur;
    esac;
  next(out_lob_ll) := out_lob_ll;
  next(out_lob_lr) := out_lob_lr;
  next(out_lob_rl) := out_lob_rl;
  next(out_lob_rr) := out_lob_rr;
  next(out_cor_ll) := out_cor_ll;
  next(out_cor_lr) := out_cor_lr;
  next(out_cor_rl) := out_cor_rl;
  next(out_cor_rr) := out_cor_rr;
  next(lob_out_ll) := lob_out_ll;
  next(lob_out_lr) := lob_out_lr;
  next(lob_out_rl) := lob_out_rl;
  next(lob_out_rr) := lob_out_rr;
  next(lob_cor_ll) := lob_cor_ll;
  next(lob_cor_lr) := lob_cor_lr;
  next(lob_cor_rl) := lob_cor_rl;
  next(lob_cor_rr) := lob_cor_rr;
  next(cor_out_ll) := cor_out_ll;
  next(cor_out_lr) := cor_out_lr;
  next(cor_out_rl) := cor_out_rl;
  next(cor_out_rr) := cor_out_rr;
  next(cor_lob_ll) := cor_lob_ll;
  next(cor_lob_lr) := cor_lob_lr;
  next(cor_lob_rl) := cor_lob_rl;
  next(cor_lob_rr) := cor_lob_rr;
  next(cor_mr_ll) := cor_mr_ll;
  next(cor_mr_lr) := cor_mr_lr;
  next(cor_mr_rl) := cor_mr_rl;
  next(cor_mr_rr) := cor_mr_rr;
  next(cor_bur_ll) := cor_bur_ll;
  next(cor_bur_lr) := cor_bur_lr;
  next(cor_bur_rl) := cor_bur_rl;
  next(cor_bur_rr) := cor_bur_rr;
  next(mr_cor_ll) := mr_cor_ll;
  next(mr_cor_lr) := mr_cor_lr;
  next(mr_cor_rl) := mr_cor_rl;
  next(mr_cor_rr) := mr_cor_rr;
  next(bur_cor_ll) := bur_cor_ll;
  next(bur_cor_lr) := bur_cor_lr;
  next(bur_cor_rl) := bur_cor_rl;
  next(bur_cor_rr) := bur_cor_rr;

SPEC
  (EX (AX (visitor -> (EF (res = mr))))) &
  (EX (AX (visitor -> (! E [ !(res = lob) U (res = mr) ])))) &
  (EX (AX (employee -> (EF (res = bur))))) &
  (EX (AX ((!employee) -> (! (EF (res = bur)))))) &
  (EX (AX (AG (EF (res = out)))))
