MODULE main

VAR
  req: {out, lob, cor, off, mr};
  state: {out, lob, cor, off, mr};

IVAR
  grant_req: boolean;

ASSIGN
  init(state) := out;
  init(req) := {out, lob, cor};

  next(state) :=
    case
      (state = out) & (req = lob) : {out, lob};
      (state = out) & (req = cor) : {out, cor};
      (state = out) & (req != lob & req != cor) : {out};
      (state = lob) & (req = out) : {lob, lob};
      (state = lob) & (req = cor) : {lob, cor};
      (state = lob) & (req != out & req != cor) : {lob};
      (state = cor) & (req = out) : {cor, out};
      (state = cor) & (req = lob) : {cor, lob};
      (state = cor) & (req = mr) : {cor, mr};
      (state = cor) & (req = off) : {cor, off};
      (state = cor) & (req = cor) : {cor};
      (state = off) & (req = cor) : {off, cor};
      (state = off) & (req != cor) : {off};
      (state = mr) & (req = cor) : {mr, cor};
      (state = mr) & (req != cor) : {mr};
    esac;

TRANS
  (!grant_req -> next(state) = state)

FULL_OBS_CTL_GOAL
  AG state != off
--- & A[ state != mr W state = lob]
--- & AG ((state = out) -> (EF state = mr))
